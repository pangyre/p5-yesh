[% META title = "Set up" %]
<script type="text/javascript">//<![CDATA[
jQuery(function($){
    $(".option").toggle();
    $(".option1").click(function(){ $("#option1").slideToggle("slow"); });
    $(".option2").click(function(){ $("#option2").slideToggle("slow"); });
    $(".option3").click(function(){ $("#option3").slideToggle("slow"); });
});
//]]> </script>

[% IF warning %]
<div>
<h2 class="alert">Warning!</h2>

<p>Your configuration is already set up. You can keep going since you
are an admin user but <b class="alert">you are probably making a huge mistake</b>.
</p>

[%-IF ( tables = yesh.model("DBIC").storage.dbh.tables() ) %]
<p><b>For example, the following tables are already set up and usable in the
currently designated database ([% yesh.model("DBIC").connect_info.dsn %]):</b>
[% tables.serial() %]. <b class="alert">If they contain data you might erase them
<i class="alert">permanently</i> by going through the set up steps again.</b>
</p>
[%-END %]

<p>Pick <b>one</b> of the following set up choices.</p>

</div>
[%-ELSE %]

<p>Your site is not configured. Don’t panic but ain’t nothing gonna
work till it is. Site documents are available here: [% local_perldoc_link("Yesh::Manual") %]. You have three choices now.
Pick <b>one</b>.</p>

[%-END %]

<ol style="display:none;" class="option" id="options">
    <li><b><a class="option1" href="#option1">Simplistic</a></b>. Uses SQLite. Easy, not necessarily recommended.</a></li>
    <li><b><a class="option2" href="#option2">Normal-esque</a></b>. Uses whatever DB and settings you choose. Probably the best option. Easy if you have good information about your database.</a></li>
    <li><b><a class="option3" href="#option3">Advanced</a></b>. You write the configuration file yourself. Requires knowledge of <acronym title="YAML Ain’t Markup Language"><a href="http://www.yaml.org/">YAML</a></acronym>, and [%perldoc_link("DBIx::Class::Schema")%] as well as an existing database.</li>
</ol>

<p>Note, your application is being run by <b>[% user | html %]</b>. This user [% can_auto ? "has" : "<b>does not</b> have" %] permissions to edit files in the directory [% yesh.path_to("/") %], so it looks like [% can_auto ? "you should have no problems using" : "you may <b>not</b> be able to use" %] option #1 or #2.</p>

<div>

<div class="box option" id="option1" style="background-color:#f6fff6">
<h2><a name="option1">1. Simplistic set up</a></h2>

<p>
Are you feeling lucky? This will deploy your site database to <a href"http://www.sqlite.org/">SQLite</a>. It is simple, fast, and robust but not as strict about data as other database engines.
</p>

<form name="auto" method="post" action="[% yesh.request.uri.path %]" enctype="multipart/form-data" style="text-align:center">
<p>
  <input type="submit" name="auto" value="Set it up with SQLite!" /> 
</p>
</form>
</div>

<div class="box option" id="option2" style="background-color:#fafffc">
<h2><a name="option2">2. Normal-esque database configuration</a></h2>

[% form %]

<p>If you would like a different database than those listed in the dropdown—e.g. Oracle—you may be able to get away with it but you will need to do the configuration manually as discussed in option #3.</p>

</div>

<div class="box option" id="option3" style="background-color:#faf9f3">
<h2><a name="option3">3. Advanced set up</a></h2>

<p>If you know <a href="http://www.catalystframework.org/">Catalyst</a>, are a competent programmer, or someone with some spare hours to spend learning some really great stuff, you can edit the following <acronym title="YAML Ain’t Markup Language">YAML</acronym> configuration file directly.</p>

<blockquote><code>[% yesh.path_to("conf/yesh_local.yml") %]</code></blockquote>

<p>That configuration file is specific to <i>your</i> changes and will override things in the main configuration file—<code>[% yesh.path_to("yesh.yml") %]</code>—which you should never touch.
</p>

<p>
You will need to know <acronym title="YAML Ain’t Markup Language"><a
href="http://www.yaml.org/">YAML</a></acronym> and exactly how to set up a database connection for [%perldoc_link("DBI")%] via [%perldoc_link("DBIx::Class::Schema")%].
</p>

<h3>Database documents</h3>
<ul>
  <li>Database driver for [% perldoc_link("DBD::SQLite","SQLite") %].</li>
  <li>Database driver for [% perldoc_link("DBD::Pg","PostgreSQL") %].</li>
  <li>Database driver for [% perldoc_link("DBD::mysql","MySQL") %].</li>
</ul>

</div>

</div>
